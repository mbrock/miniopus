#!/usr/bin/env bash
set -euo pipefail

OPTS_SPEC="\
$0 [<options>]...
--
h,help!            print help
save-audio=<path>  save audio to file
language=<lang>    specify language code
model=<model>      specify Deepgram model
oneshot            print one final result and exit
interim-results    enable interim results
smart-format       enable smart format
punctuate          enable punctuation
diarize            enable diarization
"

eval "$(echo "$OPTS_SPEC" | 
 git rev-parse --parseopt -- "$@" || echo exit $?)"

params=
save_audio=/dev/null

while [ $# -gt 0 ]; do
  case "$1" in
    --model) params+="&model=$2"; shift;;
    --interim-results) params+="&interim_results=true";;
    --smart-format) params+="&smart_format=true";;
    --punctuate) params+="&punctuate=true";;
    --diarize) params+="&diarize=true";;
    --language) params+="&language=$2"; shift;;
    --save-audio) save_audio="$2"; shift;;
    --oneshot) oneshot=true;;
    --) shift; break;;
  esac
  shift
done

url="wss://api.deepgram.com/v1/listen?$params"
auth="Authorization: Token ${DEEPGRAM_API_KEY}"

coproc WEBSOCAT { 
  websocat -E --no-close -H "$auth" --binary --no-line - msg2line:"$url"
}

exec {WEBSOCAT_IN}<&${WEBSOCAT[1]}
exec {WEBSOCAT_OUT}<&${WEBSOCAT[0]}

miniogg ~/minirec.sock | tee "$save_audio" >&${WEBSOCAT_IN} &
MINIOGG_PID=$!

if [[ "${oneshot:-}" == "true" ]]; then
  read -r line <&$WEBSOCAT_OUT
  echo "$line" | jq -r '.channel.alternatives[0].transcript'
  exec {WEBSOCAT_IN}<&-
  exec {WEBSOCAT_OUT}<&-
  kill -SIGINT $MINIOGG_PID  
  kill -SIGINT $WEBSOCAT_PID
else
  while read -r line; do
    echo "$line"
  done <&$WEBSOCAT_OUT
fi
